master {

  websocket {
    throttle-elements = 1
    throttle-elements = ${?WSS_THROTTLE_ELEMENTS}
    throttle-seconds = 1s
    throttle-seconds = ${?WSS_THROTTLE_SECONDS}
  }

}

akka {
  loglevel = "INFO"
  loglevel = ${?LOGLEVEL}
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster
    debug {
      unhandled = on
    }
//    serialization-bindings {
//      "com.synerise.steam.common.JacksonSerializable" = jackson-json
//    }
  }

  http {
    server.websocket.periodic-keep-alive-max-idle = 1 second
  }

  cluster {
    roles = ["master"]
    auto-down-unreachable-after = 10s // remove if using downing policy
  }

  coordinated-shutdown.run-by-jvm-shutdown-hook = on //this is the default value
  coordinated-shutdown.terminate-actor-system = on
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      # For the kubernetes API this value is substributed into the %s in pod-label-selector
      service-name = "super-soft-steam-cluster"

      # pick the discovery method you'd like to use:
      discovery-method = kubernetes-api
    }
  }
}

akka.discovery {
  kubernetes-api {
    # in fact, this is already the default:
    pod-label-selector = "cluster=%s"
  }
}
